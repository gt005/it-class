# Generated by Django 3.0.1 on 2020-10-31 22:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mainapp', '0013_puples_language_stack'),
        ('hard_tacks_education_system', '0003_auto_20201031_1859'),
    ]

    operations = [
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_number', models.PositiveIntegerField(verbose_name='Уровень группы')),
                ('level_theme', models.CharField(max_length=255, verbose_name='Тема, которая проходится на уровне')),
            ],
        ),
        migrations.CreateModel(
            name='EducationTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='Дата начала(открытие) задачи')),
                ('end_time', models.DateTimeField(verbose_name='Дата конца(закрытия) задачи')),
                ('task_name', models.CharField(max_length=200, verbose_name='Название задания')),
                ('description_task', tinymce.models.HTMLField(verbose_name='Условие задачи')),
                ('input_format', tinymce.models.HTMLField(verbose_name='Формат ввода')),
                ('output_format', tinymce.models.HTMLField(verbose_name='Формат вывода')),
                ('photo_1', models.ImageField(blank=True, upload_to='tasks_system_photos/', verbose_name='Фото 1 для задачи')),
                ('photo_2', models.ImageField(blank=True, upload_to='tasks_system_photos/', verbose_name='Фото 2 для задачи')),
                ('photo_3', models.ImageField(blank=True, upload_to='tasks_system_photos/', verbose_name='Фото 3 для задачи')),
                ('example_input_1', tinymce.models.HTMLField(blank=True, verbose_name='Пример 1 ввод')),
                ('example_output_1', tinymce.models.HTMLField(blank=True, verbose_name='Пример 1 вывод')),
                ('example_input_2', tinymce.models.HTMLField(blank=True, verbose_name='Пример 2 ввод')),
                ('example_output_2', tinymce.models.HTMLField(blank=True, verbose_name='Пример 2 вывод')),
                ('example_input_3', tinymce.models.HTMLField(blank=True, verbose_name='Пример 3 ввод')),
                ('example_output_3', tinymce.models.HTMLField(blank=True, verbose_name='Пример 3 вывод')),
                ('task_level', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='hard_tacks_education_system.EducationLevel', verbose_name='Уровень задачи')),
            ],
        ),
        migrations.CreateModel(
            name='CheckedEducationTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_code', models.TextField(verbose_name='Решение задачи в виде кода')),
                ('first_peer_mark', models.PositiveIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Оценка peer 1')),
                ('second_peer_mark', models.PositiveIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Оценка peer 2')),
                ('contest_token', models.CharField(max_length=255, verbose_name='Токен для Яндекс.Контест')),
                ('system_mark', models.PositiveIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Оценка Яндекс.Контест')),
                ('result_summ_mark', models.PositiveIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)], verbose_name='Общий итог всех оценок')),
                ('first_peer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Peer_1', to='mainapp.Puples', verbose_name='Peer 1')),
                ('original_task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hard_tacks_education_system.EducationTask', verbose_name='Оригинал задачи')),
                ('second_peer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Peer_2', to='mainapp.Puples', verbose_name='Peer 2')),
                ('solved_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.Puples', verbose_name='Человек, отправивший на проверку')),
            ],
        ),
    ]
